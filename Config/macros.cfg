

#############################################################################
# Macros
#############################################################################
[pause_resume]
[gcode_arcs]
[display_status]

[gcode_macro Pid_bed_60]
gcode:
   PID_CALIBRATE HEATER=heater_bed TARGET=60
   G28
   SAVE_CONFIG 

[gcode_macro Pid_Hotend_210]
gcode:
 
   PID_CALIBRATE HEATER=extruder TARGET=210
   G28
   SAVE_CONFIG 
########################################
# Light & Neopixel
########################################    
[neopixel neo]
pin: PB2
chain_count:10
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
      

[gcode_macro led_on]
gcode:
          SET_LED LED=neo2 RED=1 GREEN=1 BLUE=1
[gcode_macro led_off]
gcode:
          NEOPIXEL_DISPLAY LED=neo2 TYPE=clear    
######### NeoPixel By Samtech 3D#############
#############################################
[gcode_macro neopixel_on]
gcode:
          SET_LED LED=neo RED=1 GREEN=1 BLUE=1
[gcode_macro neopixel_off]
gcode:
          NEOPIXEL_DISPLAY LED="neo" TYPE=clear
          
[gcode_macro blue_on]
gcode:
          SET_LED LED=neo RED=0 GREEN=0 BLUE=1
[gcode_macro red_on]
gcode:
          SET_LED LED=neo RED=1 GREEN=0 BLUE=0   
[gcode_macro green_on]
gcode:
          SET_LED LED=neo RED=00 GREEN=1 BLUE=0  
[gcode_macro extrudertemp]
gcode:
          neopixel_display LED=neo TYPE=extruder_temp MODE=glow
[gcode_macro extruderprogress]
gcode:
          neopixel_display LED=neo TYPE=extruder_temp MODE=progress     

[gcode_macro bedtemp]
gcode:
          neopixel_display LED=neo TYPE=bed_temp MODE=glow  
[gcode_macro bedprogress]
gcode:
          neopixel_display LED=neo TYPE=bed_temp MODE=progress          
[gcode_macro percentprogress]
gcode:
          neopixel_display LED=neo TYPE=print_percent  MODE=progress        
[gcode_macro percentglow]
gcode:
          neopixel_display LED=neo TYPE=print_percent  MODE=glow   
[gcode_macro speedprogress]
gcode:
          neopixel_display LED=neo TYPE=printer_speed    MODE=progress  

[gcode_macro speedglow]
gcode:
          neopixel_display LED=neo TYPE=printer_speed    MODE=glow     

#################################
# Logo marco Progressive effect
##################################
[delayed_gcode Welcome_1]
initial_duration: 0.125
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=1
  
  M300 S3000 P1
[delayed_gcode Welcome_2]
initial_duration: 0.25
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=2
  M300 S3000 P1
[delayed_gcode Welcome_3]
initial_duration: 0.375
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=3
  M300 S3000 P1
[delayed_gcode Welcome_4]
initial_duration: 1
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=4
  M300 S3000 P1
[delayed_gcode Welcome_5]
initial_duration: 0.625
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=5
  M300 S3000 P1
[delayed_gcode Welcome_6]
initial_duration: 0.75
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=6
  M300 S3000 P1
[delayed_gcode Welcome_7]
initial_duration: 0.875
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=7
  
[delayed_gcode Welcome_8]
initial_duration: 1
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=8
  
[delayed_gcode Welcome_9]
initial_duration: 1.125
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=9  
  
[delayed_gcode Welcome_10]
initial_duration: 1.25
gcode:
  SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1 INDEX=10      
  

########################################
# filament_sensor 
########################################    
[filament_switch_sensor filament_sensor]
switch_pin: PA4
pause_on_runout: true
runout_gcode:
  PAUSE
  M300 S1 P1500
  M400 #Wait for current moves to finish: 
  M117 Ejecting remaining filament
  G0 E-0.4 F1500  # Quick Retract 
  G0 E-80 F1200  #eject remaining filament 
insert_gcode:
  M117 Check temps if cold set temps to print settings 1st. 
  insert_gcode: RESUME 
  
[idle_timeout] # Time in seconds (300 = 5 minutes)
timeout: 18000 #1h
gcode:
     #M300 S5 P1500
     M117 Idle timeout reached...
     #NEOPIXEL_DISPLAY LED="neo" TYPE=clear
     SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 # disable the extruder motor
     M104 S0 # set hotend to 0C
    # timeout: 100#18000 #1h
# Idle time (in seconds) to wait before running the above G-Code
# commands. The default is 600 seconds
 
   
     
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  #M300 S1 P1500
  ##### set defaults #####
  {% set x = params.X|default(0) %}      #edit to your park position
  {% set y = params.Y|default(130) %}      #edit to your park position
  {% set z = params.Z|default(30)|float %} #edit to your park position
  {% set e = params.E|default(1) %}        #edit to your retract length
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
   ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{e} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} 
    G90
    G1 X{x} Y{y} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  G28
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    #SET_LED LED=neo GREEN=0.667 RED=0 BLUE=1
    #M300 S1 P1500
    gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} 
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
     {% endif %} 
    
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1
########################################
# save_variables
########################################   
[save_variables]
filename: ~/savedVariables.cfg

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]  
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|

[verify_heater extruder]
max_error: 500
hysteresis: 20

[gcode_macro bed_Mesh]
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro UNLOAD_FILAMENT] #for Direct Drive
gcode:
    G91
#    G1 E10 F300
    G1 E-80 F800
    G90

[gcode_macro LOAD_FILAMENT] 
gcode:
    G91
    G1 E10 F800
    G1 E70 F300
    G90
    
[gcode_macro M600]
gcode:
  PAUSE
   
[gcode_macro TMC]
gcode:
  DUMP_TMC STEPPER=stepper_a
  DUMP_TMC STEPPER=stepper_b
  DUMP_TMC STEPPER=stepper_c
  DUMP_TMC STEPPER=extruder

#[output_pin BEEPER_pin]
#pin: PE12
#pwm: true
#value: 0
#shutdown_value: 0
#cycle_time: 0.001
#scale: 1

#[gcode_macro M300]
#gcode:
    ## Use a default 1kHz tone if S is omitted.
    #{% set S = params.S|default(1000)|int %}
    ## Use a 10ms duration is P is omitted.
    #{% set P = params.P|default(100)|int %}
    #SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    #G4 P{P}
    #SET_PIN PIN=BEEPER_pin VALUE=0 
#[gcode_macro start_tones]
#gcode:
    #M300 S2000 P500 ; chirp to indicate starting to print

#[gcode_macro end_tones]
#gcode:
    #M300 S2000 P10  ; Make Print Completed Tones
    #M300 S3000 P10 
    #M300 S4000 P500
    #M300 S3000 P10
    #M300 S2000 P20     
[gcode_macro CALIBRATE]
description: Calibration Delta
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  G91
  G1 Z-50 F1500
  G90
  G28
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_a
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_b
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_c
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  DELTA_CALIBRATE
  G28
  SAVE_CONFIG

